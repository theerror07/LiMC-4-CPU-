Input sequencer:
Inputs:
	system reset
	Clock in (system clock)
	Operation done (from decoder / microcode)
Outputs:
	Decode clock; attaches to decoder clock in
	input buffer latch: attaches to FULL latch line on input buffer
	Ram read out: attaches to ram read out on input buffer
	PC inc: attaches to PC inc line

IO Buffer:
Inputs:
	system reset: resets all latches
	latch reset: resets all latches
	Full latch: connected from sequencer latch line
	Microcode latch: Latch line connected to microcode out
	Sequence read: RAM read from sequencer
	microcode ram read set: ream read set from decoder
	RAM write: writes to ram, connected to decoder
	Databus to RAM set: sets tri state converted to output databus (4bit)
	IO buffer to internal databus set:
Outputs:
	Ram read
	Ram write
	Decode register
	Operand register

PC:
Inputs:
	full reset
	PC1 active
	PC2 active
	PC1 latch
	PC1 flag latch
	PC2 latch
	PC1 inc
	PC1 to databus set
	latch reset
Outputs:
	address bus
	data bus (for JSR)

Flag registers
Inputs:
	full reset
	Latch
	databus output set
	latch reset
	X=Y test
	X>Y test
	X<Y test
	Overflow test
	Underflow test
outputs:
	Databus (for JSR)
	PC flag latch

JSR register:
inputs:
	Databus
	X output set
	X latch
	Y output set
	Y latch
	PC output set
	PC latch
	Flags output set
	Flags latch
	full reset
	latch reset
Outputs:
	databus


decoder:
inputs:
	Decoder clock in
	EEPROM / operation done
	full reset
	operation buffer (from IO register)
outputs:
	a whole lotta stuff (37 lines)
	operation done
	
start stop:
inputs:
clock in
start
stop

outputs:
clock out